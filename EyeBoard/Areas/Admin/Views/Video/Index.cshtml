@model EyeBoard.Areas.Admin.Models.FileInfoModel

@{
    ViewBag.Title = Resources.Videos;
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
}

<h2>@Resources.Videos</h2>

<div id="uploader-dropzone" class="card text-center" style="border: 4px dashed #b4b9be;">
    <div class="card-header" style="border: none; background-color: transparent;">
        <button class="close"><span aria-hidden="true">&times;</span></button>
    </div>

    <div class="uploader-inline-content no-upload-message">

        <div class="upload-ui">
            <h2 class="upload-instructions drop-instructions mt-3">Bestanden hierheen verslepen</h2>
            <p class="upload-instructions drop-instructions">of</p>
            <span class="btn btn-primary fileinput-button">
                <span>Bestanden selecteren</span>
                <input type="file" id="fileupload" name="files[]" multiple>
            </span>
        </div>
        <div class="upload-inline-status"></div>
        <div class="post-upload mt-3">

            <p class="max-upload-size">Maximale bestandsgrootte van upload: @Model.MaxFileSize MB.</p>

        </div>

    </div>
</div>

<div id="videos" class="row mt-3 mb-5">

    @foreach (var video in Model.Media)
    {
        <div class="video col-md-2 mb-3" style="text-align: center;" data-id="@video.Id">
            <div class="card">
                <a href="/Admin/Video/Edit/@video.Id" data-id="@video.Id">
                    <video class="card-img-top" muted="muted">
                        <source src="@Url.Content(video.Url)#t=2" type="video/mp4" />
                    </video>
                </a>
                <div class="card-body">
                    @video.Title
                </div>
                <div class="card-footer">

                    <button data-id="@video.Id" class="btn btn-dark btn-sm btn-delete">@Resources.Delete</button>
                </div>
            </div>
        </div>
    }
    <div class="video-prototype col-md-2 mb-3 d-none" style="text-align: center;">
        <div class="card">
            <a href="#">

            </a>
            <div class="card-body">

            </div>
            <div class="card-footer">
                <small class="text-muted"></small>
                <button class="btn btn-dark btn-sm btn-delete">@Resources.Delete</button>
            </div>
        </div>
    </div>

</div>

@Html.Partial("_FileUploadPartial", Model)

@section scripts
{
<!-- SignalR library. -->
<script src="~/Scripts/jquery.signalR-2.4.0.min.js"></script>
<!-- SignalR hub script automatisch gegenereerd door service -->
<script src="@System.Configuration.ConfigurationManager.AppSettings["HubConnectionUrl"]/signalr/hubs"></script>
<!-- Verbinding met SignalR en bericht update -->
<script>
    function deleteVideo(id) {
        $.post('/api/video/delete/' + id, function (result) {
                var presentation = $("div[data-id='" + result + "']");
                presentation.remove();
            });
        }

    $(function () {

        var uploadCount = 0;
        var uploadPath = "@System.Configuration.ConfigurationManager.AppSettings["VideosFolder"]";

        // De url definieren waar de service wordt uitgevoerd
        $.connection.hub.url = "@System.Configuration.ConfigurationManager.AppSettings["HubConnectionUrl"]/signalr";

        // Verbinden met Hub
        var scheduler = $.connection.taskSchedulerHub;

        scheduler.client.finishTask = function (id, path, name, title) {
            console.log(name);

            var video = $("<video />").addClass("card-img").attr("muted", "muted");
            var source = $("<source />").attr("src", path + "#t=2").attr("type", "video/mp4");
            video.append(source);

            var proto = $("div[data-filename='" + name + "']");
            proto.attr('data-id', id);
            var progress = proto.find(".progress");
            var href = proto.find("a").attr("data-id", id).attr("href", "/Admin/Video/Edit/" + id);
            var body = proto.find(".card-body").text(title);
            progress.replaceWith(video);

            proto.find(".btn-delete").attr('data-id', id).click(function (e) {
                e.preventDefault();
                deleteVideo(id);
            });
        }

        $.connection.hub.start().done(function () {
            $('.btn-delete').click(function (e) {
                e.preventDefault();

                deleteVideo($(this).attr('data-id'));
            });

            $("#fileupload").bind("fileuploadadd", function (e, data) {
                // console.log(data.files[0].name);
                ++uploadCount;
                var proto = $("#videos .video-prototype").clone();
                proto.attr("data-filename", data.files[0].name);
                
                var progress = $("<div />").addClass("progress");
                var progressBar = $("<div />").addClass("progress-bar").css("width", "0%");
                progress.append(progressBar);
                
                proto.find("a").append(progress);
                proto.removeClass("video-prototype d-none").addClass("video");

                $("#videos").prepend(proto);


            });

            $("#fileupload").bind("fileuploaddone", function (e, data) {
                var proto = $("div[data-filename='" + data.result.name + "']");
                var progress = proto.find(".progress");
                progress.html('Bezig met converteren...');

                scheduler.server.runTask(data.result.id);
             });

            $("#fileupload").bind("fileuploadprogressall", function (e, data) {
                var progress = parseInt(data.loaded / data.total * 100, 10);

                $('.video .progress-bar').css(
                    'width',
                    progress + '%');
            });

            // Check if conversions are running
            $.get('/api/task?taskType=0', function (response) {

                $.each(response, function (i, task) {
                    ++uploadCount;
                    var proto = $("#videos .video-prototype").clone();
                    proto.attr("data-filename", task.OriginalFile);

                    var progress = $("<div />").addClass("progress");
                    progress.html('Bezig met converteren...');

                    proto.find("a").append(progress);
                    proto.removeClass("video-prototype d-none").addClass("video");

                    $("#videos").prepend(proto);
                });

            });


        });


        
    });
</script>

}