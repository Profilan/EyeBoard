@model EyeBoard.Models.BoardViewModel

<canvas id="ticker"></canvas>

<script src="~/Scripts/preloadjs.min.js"></script>
<script src="~/Scripts/easeljs.min.js"></script>

<script>
    function refreshTicker(vector, fontsize, fontColor, canvasHeight, canvasWidth, stage) {
        var xOffset = 0;

        $.get("/api/notification/" + "@Model.Group.Id", function (data) {
            
            createjs.Ticker.off("tick");
            stage.removeAllChildren();
            var container = new createjs.Container();
            stage.addChild(container);

            $.each(data, function (idx, value) {

                var text = new createjs.Text(value.Title, fontsize + 'px Helvetica', fontColor);
                text.x = xOffset;
                text.y = (canvasHeight - fontsize) / 2;
                container.addChild(text);

                xOffset += 40 + text.getMeasuredWidth();
            });
            container.setBounds(canvasWidth, 0, xOffset, canvasHeight);

            createjs.Ticker.on("tick", function () {
                container.x += vector;
                if (container.x < 0 - xOffset) { container.x = canvasWidth }
                stage.update();
            });
            createjs.Ticker.framerate = 60;
        });
    }


    $(function () {

        var wrapper = $('#bottom2');
        var canvasHeight = wrapper.height();
        var canvasWidth = wrapper.width();
        $('#ticker').attr('width', canvasWidth).attr('height', canvasHeight);

        var stage = new createjs.Stage('ticker');

        refreshTicker(-2, 30, "#000000", canvasHeight, canvasWidth, stage);
    });
</script>

