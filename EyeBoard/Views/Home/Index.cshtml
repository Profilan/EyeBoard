@model EyeBoard.Models.BoardViewModel

@{
    ViewBag.Title = "EyeBoard";
}

@if (Model.Group.Id == new Guid("7819ead7-3bdd-4bb9-b224-6dc2d760efa1")) // Presentation Only
{
    <div>
        @Html.Partial("_PresentationWidget");
    </div>
}

@if (Model.Group.Id == new Guid("B80FFD7F-C50B-4E04-8B11-F2BEFFA307B3")) //Company Information
{
    <div class="row">
        <div class="col-9" style="height: 834px;">
            <div class="row">
                @Html.Partial("_PresentationWidget")
            </div>
        </div>
        <div class="col-3">
            <div class="row">
                <div class="col-12" style="height: 274px; display: table;">
                    @Html.Partial("_WeatherWidget")
                </div>
                <div class="col-12" style="height: 274px; display: table; background-color: rgb(88, 149, 205);">
                    @Html.Partial("_DeliveredOrdersWidget")
                </div>
                <div class="col-12" style="height: 275px; display: table; background-color: rgb(79, 134, 184);">
                    @Html.Partial("_DeliveredPackagesWidget")
                </div>
            </div>
        </div>
    </div>
    <div id="bottom1">
        @Html.Partial("_VerticalFeedWidget")
    </div>
    <div id="bottom2">
        @Html.Partial("_TickerWidget")
    </div>
}



@section scripts
{
    <!--Reference the SignalR library. -->
    <script src="~/Scripts/jquery.signalR-2.4.0.js"></script>
    <!--Reference the autogenerated SignalR hub script. -->
    <script src="~/signalr/hubs"></script>
    <!--SignalR script to update the the page.-->
    <script>
        var screenId = '@Model.ScreenId';

        function refreshAt(hours, minutes, seconds) {
            var now = new Date();
            var then = new Date();

            if (now.getHours() > hours ||
                (now.getHours() == hours && now.getMinutes() > minutes) ||
                now.getHours() == hours && now.getMinutes() == minutes && now.getSeconds() >= seconds) {
                then.setDate(now.getDate() + 1);
            }
            then.setHours(hours);
            then.setMinutes(minutes);
            then.setSeconds(seconds);

            var timeout = (then.getTime() - now.getTime());
            setTimeout(function () { window.location.reload(true); }, timeout);
        }

        $(function () {

            
            // SignalR Hub Handling
            // Reference the auto-generated proxy for the hub
            var screenHub = $.connection.screenHub;

            // Add events for the screen
            screenHub.client.updateGroup = function (id) {
                console.log("updated");
                refreshPresentations();
                refreshTicker(-1, 40, "#fff");
            };

            screenHub.client.updateScreen = function (id) {
                if (id == screenId) {
                    window.location.reload();
                }
            };

            // Start the connection
            $.connection.hub.start().done(function () {

            });

            refreshAt(@Model.RefreshHours, @Model.RefreshMinutes, @Model.RefreshSeconds);
        });
    </script>
}
