@model EyeBoard.Models.BoardViewModel

@{
    /**/

    ViewBag.Title = "EyeBoard";

    var groupId = "";
    if (Model.Group != null)
    {
        groupId = Model.Group.Id.ToString().ToUpper();
    }

}


@switch (groupId)
{
    case "7819EAD7-3BDD-4BB9-B224-6DC2D760EFA1": // Presentation Only
        @Html.Partial("_PresentationOnly")
        break;
    case "B80FFD7F-C50B-4E04-8B11-F2BEFFA307B3": // Company Information
        @Html.Partial("_CompanyInformation")
        break;
    case "B04FE0F8-BB8B-40F2-A4B4-257B62BBF9E9": // Financial Information
    case "EC8E606B-F3F0-4E78-9AAE-CB52C8C6D3B8":
        @Html.Partial("_FinancialInformation")
        break;
    case "35B3B2A0-2983-472E-8FF5-C4087F9BD267": // Showroom Information
        @Html.Partial("_ShowroomInformation")
        break;
    default:
        @Html.Partial("_NotAssigned")
        break;
}


@section scripts
{
    <!--Reference the SignalR library. -->
    <script src="~/Scripts/jquery.signalR-2.4.0.js"></script>
    <!--Reference the autogenerated SignalR hub script. -->
    <script src="~/signalr/hubs"></script>
    <!--SignalR script to update the the page.-->
    <script>
        var screenId = '@Model.ScreenId';

        function refreshAt(hours, minutes, seconds) {
            var now = new Date();
            var then = new Date();

            if (now.getHours() > hours ||
                (now.getHours() == hours && now.getMinutes() > minutes) ||
                now.getHours() == hours && now.getMinutes() == minutes && now.getSeconds() >= seconds) {
                then.setDate(now.getDate() + 1);
            }
            then.setHours(hours);
            then.setMinutes(minutes);
            then.setSeconds(seconds);

            var timeout = (then.getTime() - now.getTime());
            setTimeout(function () { window.location.reload(true); }, timeout);
        }

        var context = this;

        window.addEventListener("focus", handleBrowserState.bind(context, true));
        window.addEventListener("blur", handleBrowserState.bind(context, false));

        function handleBrowserState(isActive) {
            console.log(isActive);
        }

        $(function () {


            // SignalR Hub Handling
            // Reference the auto-generated proxy for the hub
            var screenHub = $.connection.screenHub;

            // Add events for the screen
            screenHub.client.updateGroup = function (id) {
                console.log("updated");
                refreshPresentations();
                refreshTicker(-1, 40, "#fff");
            };

            screenHub.client.updateScreen = function (id) {
                if (id == screenId) {
                    window.location.reload();
                }
            };

            // Start the connection
            $.connection.hub.start().done(function () {

            });

            refreshAt(@Model.RefreshHours, @Model.RefreshMinutes, @Model.RefreshSeconds);

            setTimeout(function () { window.location.reload(true); }, 30 * 60 * 1000);
        });
    </script>
}
